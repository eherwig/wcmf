<?php
/**
 * This file was generated by wCMFGenerator 3.0.0017 from newroles.uml on Wed Dec 15 04:52:38 CET 2010. 
 * Manual modifications should be placed inside the protected regions.
 */
require_once(WCMF_BASE."wcmf/lib/model/mapper/class.NodeUnifiedRDBMapper.php");
require_once(WCMF_BASE."application/include/model/wcmf/class.UserRDB.php");

/**
 * @class UserRDBRDBMapper
 * UserRDBRDBMapper maps UserRDB Nodes to the database.
 * UserRDB description: 
 *
 * @author 
 * @version 1.0
 */
class UserRDBRDBMapper extends NodeUnifiedRDBMapper
{
  /**
   * @see RDBMapper::getType()
   */
  public function getType()
  {
    return 'UserRDB';
  }
  /**
   * @see PersistenceMapper::getPkNames()
   */
  public function getPkNames()
  {
    return array('id');
  }
  /**
   * @see PersistenceMapper::getProperties()
   */
  public function getProperties()
  {
  	return array(
      'is_searchable' => true,
      'display_value' => 'login',
// PROTECTED REGION ID(application/include/model/wcmf/class.UserRDBRDBMapper.php/Properties) ENABLED START
// PROTECTED REGION END
	);
  }
  /**
   * @see PersistenceMapper::getDefaultOrder()
   */
  public function getDefaultOrder()
  {
    return array();
  }
  /**
   * @see RDBMapper::getRelationDescriptions()
   */
  protected function getRelationDescriptions()
  {
    return array(
      'Locktable' => new RDBOneToManyRelationDescription('UserRDB', 'UserRDB', 'Locktable', 'Locktable', '1', '1', '0', 'unbounded', 'composite', 'none', 'true', 'true', 'child', 'id', 'fk_user_id'),
      'RoleRDB' => new RDBManyToManyRelationDescription(
        /* this -> nm  */ new RDBOneToManyRelationDescription('UserRDB', 'UserRDB', 'NMUserRole', 'NMUserRole', '1', '1', '0', 'unbounded', 'composite', 'none', 'true', 'true', 'child', 'id', 'fk_user_id'),
        /* nm -> other */ new RDBManyToOneRelationDescription('NMUserRole', 'NMUserRole', 'RoleRDB', 'RoleRDB', '0', 'unbounded', '1', '1', 'none', 'composite', 'true', 'true', 'parent', 'id', 'fk_role_id')
      ),
    );
  }
  /**
   * @see RDBMapper::getAttributeDescriptions()
   */
  protected function getAttributeDescriptions()
  {
    return array(
     /**
      * Value description: 
      */
      'id' => new RDBAttributeDescription('id', '', array('DATATYPE_IGNORE'), null, '', '', '', false, 'text', 'text', 'user', 'id'),
     /**
      * Value description: 
      */
      'login' => new RDBAttributeDescription('login', 'string', array('DATATYPE_ATTRIBUTE'), null, '', '', '', true, 'text', 'text', 'user', 'login'),
     /**
      * Value description: 
      */
      'password' => new RDBAttributeDescription('password', 'string', array('DATATYPE_ATTRIBUTE'), null, '', '', '', true, 'password', 'text', 'user', 'password'),
     /**
      * Value description: 
      */
      'name' => new RDBAttributeDescription('name', 'string', array('DATATYPE_ATTRIBUTE'), null, '', '', '', true, 'text', 'text', 'user', 'name'),
     /**
      * Value description: 
      */
      'firstname' => new RDBAttributeDescription('firstname', 'string', array('DATATYPE_ATTRIBUTE'), null, '', '', '', true, 'text', 'text', 'user', 'firstname'),
     /**
      * Value description: 
      */
      'config' => new RDBAttributeDescription('config', 'string', array('DATATYPE_ATTRIBUTE'), null, '', '', '', true, 'select#fkt:g_getConfigFiles', 'text', 'user', 'config'),
     /* 
      * Value description:  
      */
      'sid' => new ReferenceDescription('sid', 'Locktable', 'sessionid'),
    );
  }
  /**
   * @see RDBMapper::createObject()
   */
  protected function createObject(ObjectId $oid=null)
  {
    return new UserRDB($oid);
  }
  /**
   * @see NodeUnifiedRDBMapper::getTableName()
   */
  protected function getTableName()
  {
    return 'user';
  }
}
?>
