<?php
/**
 * This file was generated by wCMFGenerator 3.0.0017 from newroles.uml on Tue May 17 15:35:25 CEST 2011.
 * Manual modifications should be placed inside the protected regions.
 */
require_once(WCMF_BASE."wcmf/lib/model/class.Node.php");

/**
 * @class Translation
 * Translation description: Instances of this class are used to localize entity attributes. Each instance defines a translation of one attribute of one entity into one language.
 *
 * @author 
 * @version 1.0
 */
class TranslationBase extends Node
{
    function __construct($oid=null, $type=null)
    {
      if ($type == null)
        parent::__construct('Translation', $oid);
      else
        parent::__construct($type, $oid);
    }
    /**
     * @see PersistentObject::getObjectDisplayName()
     */
    function getObjectDisplayName()
    {
      return Message::get("Translation");
    }
    /**
     * @see PersistentObject::getObjectDescription()
     */
    function getObjectDescription()
    {
      return Message::get("Instances of this class are used to localize entity attributes. Each instance defines a translation of one attribute of one entity into one language.");
    }
    /**
     * @see PersistentObject::getValueDisplayName()
     */
    function getValueDisplayName($name, $type=null)
    {
      $displayName = $name;
      if ($name == 'id') $displayName = Message::get("id");
      if ($name == 'objectid') $displayName = Message::get("objectid");
      if ($name == 'attribute') $displayName = Message::get("attribute");
      if ($name == 'translation') $displayName = Message::get("translation");
      if ($name == 'language') $displayName = Message::get("language");
      return Message::get($displayName);
    }
    /**
     * @see PersistentObject::getValueDescription()
     */
    function getValueDescription($name, $type=null)
    {
      $description = $name;
      if ($name == 'id') $description = Message::get("");
      if ($name == 'objectid') $description = Message::get("The object id of the object to which the translation belongs");
      if ($name == 'attribute') $description = Message::get("The attribute of the object that is translated");
      if ($name == 'translation') $description = Message::get("The translation");
      if ($name == 'language') $description = Message::get("The language of the translation");
      return Message::get($description);
    }
    /**
     * Getter/Setter for properties
     */
    function getId($unconverted=false)
    {
      if ($unconverted) {
        return $this->getUnconvertedValue('id');
      }
      else {
        return $this->getValue('id');
      }
    }
    function setId($id)
    {
      return $this->setValue('id', $id);
    }
    function getObjectid($unconverted=false)
    {
      if ($unconverted) {
        return $this->getUnconvertedValue('objectid');
      }
      else {
        return $this->getValue('objectid');
      }
    }
    function setObjectid($objectid)
    {
      return $this->setValue('objectid', $objectid);
    }
    function getAttribute($unconverted=false)
    {
      if ($unconverted) {
        return $this->getUnconvertedValue('attribute');
      }
      else {
        return $this->getValue('attribute');
      }
    }
    function setAttribute($attribute)
    {
      return $this->setValue('attribute', $attribute);
    }
    function getTranslation($unconverted=false)
    {
      if ($unconverted) {
        return $this->getUnconvertedValue('translation');
      }
      else {
        return $this->getValue('translation');
      }
    }
    function setTranslation($translation)
    {
      return $this->setValue('translation', $translation);
    }
    function getLanguage($unconverted=false)
    {
      if ($unconverted) {
        return $this->getUnconvertedValue('language');
      }
      else {
        return $this->getValue('language');
      }
    }
    function setLanguage($language)
    {
      return $this->setValue('language', $language);
    }
}
?>
