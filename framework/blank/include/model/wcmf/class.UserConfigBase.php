<?php
/**
 * This file was generated by wCMFGenerator 3.0.0017 from newroles.uml on Tue May 17 15:35:25 CEST 2011.
 * Manual modifications should be placed inside the protected regions.
 */
require_once(WCMF_BASE."wcmf/lib/model/class.Node.php");

/**
 * @class UserConfig
 * UserConfig description: 
 *
 * @author 
 * @version 1.0
 */
class UserConfigBase extends Node
{
    function __construct($oid=null, $type=null)
    {
      if ($type == null)
        parent::__construct('UserConfig', $oid);
      else
        parent::__construct($type, $oid);
    }
    /**
     * @see PersistentObject::getObjectDisplayName()
     */
    function getObjectDisplayName()
    {
      return Message::get("UserConfig");
    }
    /**
     * @see PersistentObject::getObjectDescription()
     */
    function getObjectDescription()
    {
      return Message::get("");
    }
    /**
     * @see PersistentObject::getValueDisplayName()
     */
    function getValueDisplayName($name, $type=null)
    {
      $displayName = $name;
      if ($name == 'id') $displayName = Message::get("id");
      if ($name == 'fk_user_id') $displayName = Message::get("fk_user_id");
      if ($name == 'key') $displayName = Message::get("key");
      if ($name == 'val') $displayName = Message::get("val");
      return Message::get($displayName);
    }
    /**
     * @see PersistentObject::getValueDescription()
     */
    function getValueDescription($name, $type=null)
    {
      $description = $name;
      if ($name == 'id') $description = Message::get("");
      if ($name == 'fk_user_id') $description = Message::get("");
      if ($name == 'key') $description = Message::get("");
      if ($name == 'val') $description = Message::get("");
      return Message::get($description);
    }
    /**
     * Getter/Setter for properties
     */
    function getId($unconverted=false)
    {
      if ($unconverted) {
        return $this->getUnconvertedValue('id');
      }
      else {
        return $this->getValue('id');
      }
    }
    function setId($id)
    {
      return $this->setValue('id', $id);
    }
    function getFkUserId($unconverted=false)
    {
      if ($unconverted) {
        return $this->getUnconvertedValue('fk_user_id');
      }
      else {
        return $this->getValue('fk_user_id');
      }
    }
    function setFkUserId($fk_user_id)
    {
      return $this->setValue('fk_user_id', $fk_user_id);
    }
    function getKey($unconverted=false)
    {
      if ($unconverted) {
        return $this->getUnconvertedValue('key');
      }
      else {
        return $this->getValue('key');
      }
    }
    function setKey($key)
    {
      return $this->setValue('key', $key);
    }
    function getVal($unconverted=false)
    {
      if ($unconverted) {
        return $this->getUnconvertedValue('val');
      }
      else {
        return $this->getValue('val');
      }
    }
    function setVal($val)
    {
      return $this->setValue('val', $val);
    }
    /**
     * Related node lists
     */
    function getUserRDBList()
    {
      return $this->getParentsEx(null, 'UserRDB');
    }
    function setUserRDBList(array $nodeList)
    {
      $this->setValue('UserRDB', null);
      foreach ($nodeList as $node) {
        $this->addNode($node, 'UserRDB');
      }
    }
}
?>
