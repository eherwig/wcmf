// Mainpage for doxygen documentation

/** @mainpage wCMF API Documentation
 *
 * @author 	ingo herwig <ingo@wemove.com>
 *
 * @section intro Overview
 *
 * wCMF is an object oriented framework for building browser based web 
 * applications.@n@n
 * Due to its minimal system requirements (webserver, PHP4,
 * optional MySQL) the wCMF can be installed on basic web hosting packages.
 * One of its outstanding features is the possibility to integrate any data
 * structures, what for instance allows for maintaining existing data
 * from other applications. Furthermore - since the user interface is completely
 * customizable - it's easy to integrate the system in existing design enviroments.@n@n
 * As the word framework already indicates, the wCMF is not a ready-to-use
 * application, which can be installed, configured and fed with content.
 * The wCMF solely provides a foundation, which can be used to develop applications
 * in a rather convenient way - without to much focus on technical details.
 * Nevertheless there's still some programming work to do in order to build
 * a customized application, which on the other hand provides a greater
 * flexibility than out-of-the-box systems can offer.@n@n
 * The framework approach follows the philosophy, that the earlier the developer
 * deals with the underlying infrastructure the easier adjustments to the specific
 * needs of the project can be implemented, which - when using an out-of-the-box solutions -
 * would require programming work anyway. wCMF's clear object oriented design allows for
 * a quick introduction to the application's architecture.@n
 *
 * This documentation consists of two parts:@n
 * -# the API documentation, which is mainly accessible over the navigation at the
 * top of each page and which is generated from the source code.@n
 * -# a rather narrative part, which origins from the current page. It starts with
 * an overview of the architecture of the framework, then gives answers to detailed
 * questions about configuring the framework and finally delivers HowTos for the most
 * important tasks, which occur during the usage of the framework. This part is subdivided
 * into the following topics:
 * 
 * - @ref architecture
 * - @ref extensionpoints
 * - @ref configuration
 * - @ref dbschema
 * - @ref howto
 * - @ref howtostart
 * - @ref credits
 * 
 */
