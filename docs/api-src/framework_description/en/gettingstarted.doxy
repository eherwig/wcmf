/*!
\page gettingstarted Getting started

\section secgettingstarted Getting started

The wCMF project mainly consists of two parts, the application framework and an
application template.

### Framework ###

The wCMF framework provides the infrastructure to create PHP web applications based
on the model-view-controller pattern. The project's source code is hosted at
[GitHub](https://github.com/iherwig/wcmf) and can be forked or downloaded from there.

If you manage your dependencies using [Composer](https://getcomposer.org/) you may
want to add the following lines to your `composer.json`:

@code
{
    "require-dev": {
        "wcmf/wcmf": "dev-master"
    }
}
@endcode

### Default Application ###

The default application is a fully functional data managing application based on the
wCMF framework. Besides interfaces for create/read/update/delete (CRUD) operations
on all entity types defined in the domain model, it features user, role and
permission management as well as a lucene based search.

The following screenshots show the list and detail view of an _Author_ entity type.

@image html wcmf-default-app1ws.jpg

@image html wcmf-default-app2ws.jpg

#### Installation ####

The application's source code may be forked or downloaded from
[GitHub](https://github.com/iherwig/wcmf-default-app).

After download, execute the following steps to get a running application:




1. Copy the directory named blank to the directory ../application@n@n
2. Create a database (e.g. wcmf)@n@n
3. Define your wCMF application model and create the application using wCMFGenerator@n
or@n
3.a Define your datamodel via PersistenceMapper classes and sql table definitions (see @ref howtotype)@n@n
3.b Modify config.ini to use your datamodel@n@n
4. Execute the sql script /application/install/tables.sql to install the
   wCMF base tables@n@n
5. Change passwords in table @em user (for password encryption use /wcmf/tools/password/passowrd.php)@n@n
6. Create your data tables@n@n
7. Modify config.ini in /application/include to use your database@n@n
8. Protect your /application/include directory by using a .htaccess file@n@n
9. Make sure you have activated JavaScript in your browser@n@n
10. Run the script @em install.php in the directory /application/install/ to initialize the application@n@n
11. Point your browser to /application/main.php and log into the application
   using admin/admin (or other if you changed it)
*/
