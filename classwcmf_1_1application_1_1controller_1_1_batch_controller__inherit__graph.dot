digraph "BatchController"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node0 [label="{BatchController\n|+ REQUEST_VAR\l+ ONE_CALL_VAR\l+ STEP_VAR\l+ NUM_STEPS_VAR\l+ DOWNLOAD_STEP_VAR\l+ PACKAGES_VAR\l|+ initialize()\l# doExecute()\l# getStepNumber()\l# addWorkPackage()\l# processPart()\l# getRequestValue()\l# getNumberOfSteps()\l# getDisplayText()\l# getDownloadFile()\l# getWorkPackage()\l# cleanup()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node0 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node1 [label="{Controller\n|+ CSRF_TOKEN_PARAM\l|+ __construct()\l+ initialize()\l+ execute()\l+ getRequest()\l+ getResponse()\l# validate()\l# doExecute()\l# executeSubAction()\l# redirect()\l# getLogger()\l# getSession()\l# getPersistenceFacade()\l# getPermissionManager()\l# getActionMapper()\l# getLocalization()\land 9 more...\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classwcmf_1_1lib_1_1presentation_1_1_controller.html",tooltip="Controller is the base class of all controllers. "];
  Node0 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{BatchDisplayController\n|+ REGISTRY_VAR\l+ ITERATOR_ID_VAR\l|+ initialize()\l# validate()\l# getWorkPackage()\l# startProcess()\l# loadNodes()\l# endProcess()\l# loadNode()\l# register()\l# isRegistered()\l# addNodeToResponse()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classwcmf_1_1application_1_1controller_1_1_batch_display_controller.html",tooltip="BatchDisplayController is used to load a tree of Node instances recursivly and return them in lists o..."];
  Node0 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{CopyController\n|+ OBJECT_MAP_VAR\l+ ACTION_VAR\l+ ITERATOR_ID_VAR\l|+ initialize()\l# validate()\l# getWorkPackage()\l# startProcess()\l# copyNodes()\l# endProcess()\l# copyNode()\l# getTargetNode()\l# registerCopy()\l# updateCopyOIDs()\l# getCopyOID()\l# getCopy()\l# modify()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classwcmf_1_1application_1_1controller_1_1_copy_controller.html",tooltip="CopyController is used to copy or move Node instances. "];
  Node0 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{CSVExportController\n||+ initialize()\l# validate()\l# getWorkPackage()\l# getDownloadFile()\l# initExport()\l# exportNodes()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classwcmf_1_1application_1_1controller_1_1_c_s_v_export_controller.html",tooltip="CSVExportController exports instances of one type into a CSV file. "];
  Node0 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{SearchIndexController\n||+ __construct()\l+ initialize()\l# getWorkPackage()\l# collect()\l# index()\l# optimize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classwcmf_1_1application_1_1controller_1_1_search_index_controller.html",tooltip="SearchIndexController creates a Lucene index from the complete datastore. "];
  Node0 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node6 [label="{XMLExportController\n|+ CACHE_SECTION\l+ CACHE_KEY_ROOT_OIDS\l+ CACHE_KEY_EXPORTED_OIDS\l+ LAST_INDENT_VAR\l+ TAGS_TO_CLOSE_VAR\l+ ITERATOR_ID_VAR\l|+ __construct()\l+ initialize()\l# getWorkPackage()\l# getDownloadFile()\l# initExport()\l# exportNodes()\l# finishExport()\l# endTags()\l# writeNode()\l# getNumUnvisitedChildren()\l# formatValue()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classwcmf_1_1application_1_1controller_1_1_x_m_l_export_controller.html",tooltip="XMLExportController exports the content tree into an XML file. "];
}
