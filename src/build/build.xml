<project name="wCMF app" default="dist" basedir=".">
  <description>wCMF application build file</description>

  <property file="build.properties"/>

  <condition property="dojo.build.script" value="${dojo.build.script_windows}">
     <os family="windows"/>
  </condition>
  <condition property="dojo.build.script" value="${dojo.build.script_unix}">
     <os family="unix"/>
  </condition>

  <target name="init">
    <tstamp/>
  </target>

  <target name="m2m-papyrus"
    description="transform the input model from papyrus to cwm format" >
    <replaceregexp file="../model/model.uml"
               match='xmi:version="20110701"'
               replace='xmi:version="2.1"'
    />
    <replaceregexp file="../model/model.uml"
               match='xmlns:xmi="http://www.omg.org/spec/XMI/20110701"'
               replace='xmlns:xmi="http://www.omg.org/spec/XMI/2.1"'
    />
    <replaceregexp file="../model/model.uml"
               match='xmlns:uml="http://www.eclipse.org/uml2/4.0.0/UML"'
               replace='xmlns:uml="http://www.eclipse.org/uml2/2.1.0/UML"'
    />
  </target>

  <target name="generate" depends="m2m-papyrus"
    description="generate the code from the model" >
    <java jar="${generator.base}/ChronosGenerator.jar"
          dir="${generator.workdir}" fork="true" >
      <sysproperty key="java.library.path" path="${generator.base}/lib"/>
      <arg value="${generator.base}/cartridge/Wcmf/workflow/wcmf.oaw"/>
      <arg value="-basePath=${generator.base}/"/>
      <arg value="-propertyFile=${generator.workdir}/workflow.properties"/>
      <arg value="-targetDir=${generator.target}"/>
    </java>
  </target>

  <target name="buildinfo" depends="init"
    description="generate the build version file" >
    <propertyfile file="${build.info}"
     comment="Build Information File - DO NOT MODIFY">
        <entry key="version"
         value="${version}"/>
        <entry key="build"
         type="int" default="0000"
         operation="+" pattern="0000"/>
    </propertyfile>
  </target>

  <target name="properties" description="define properties">
    <property file="${build.info}"/>
    <property name="build.base" value="../"/>
    <property name="package.file" value="${build.base}${app.name}_${version}.${build}.zip"/>
  </target>

  <target name="compile" depends="buildinfo,properties"
    description="build the frontend" >
    <exec dir="${dojo.build.base}" executable="${dojo.build.script}" output="${dojo.build.log}">
      <arg line="profile=${dojo.build.profile}"/>
    </exec>
  </target>

  <target name="dist" depends="compile"
    description="build the distribution" >
    <mkdir dir="${dist.dir}"/>
    <copy todir="${dist.dir}/wcmf">
      <fileset dir="${build.base}wcmf/">
        <exclude name="tools/"/>
        <include name="**"/>
      </fileset>
    </copy>
    <copy todir="${dist.dir}/${app.name}">
      <fileset dir="${build.base}${app.name}/">
        <exclude name="public/"/>
        <exclude name="release/"/>
        <include name="**"/>
      </fileset>
    </copy>
    <copy todir="${dist.dir}/${app.name}/public">
      <fileset dir="${build.base}${app.name}/release">
        <exclude name="js/"/>
        <exclude name="vendor/"/>
        <exclude name="build-report.txt"/>
        <exclude name="**/*.js.map"/>
        <exclude name="**/*.js.uncompressed.js"/>
        <include name="**"/>
      </fileset>
      <fileset dir="${build.base}${app.name}/release">
        <include name="js/App.js"/>
        <include name="js/App.js.map"/>
        <include name="js/App.js.uncompressed.js"/>
        <include name="**/nls/**/*.*"/>
        <include name="vendor/dojo/dojo/dojo.js"/>
        <include name="vendor/dojo/dojo/dojo.js.map"/>
        <include name="vendor/dojo/dojo/dojo.js.uncompressed.js"/>
      </fileset>
      <fileset dir="${build.base}${app.name}/public">
        <!-- fonts -->
        <include name="vendor/dbootstrap/theme/dbootstrap/font/*.*"/>
        <!-- elfinder -->
        <include name="vendor/elfinder/**/*.*"/>
      </fileset>
    </copy>
    <replaceregexp file="${dist.dir}/${app.name}/public/.htaccess"
      match="RewriteBase (.*)/src/${app.name}/public"
      replace="RewriteBase \1/src/dist/${app.name}/public"
    />
    <copy file="${build.info}" todir="${dist.dir}"/>
    <delete dir="${build.base}${app.name}/release"/>
  </target>

  <target name="package" depends="dist"
    description="pack the distribution" >
    <zip destfile="${package.file}" basedir="${dist.dir}"/>
    <delete dir="${dist.dir}"/>
    <delete file="${dojo.build.log}"/>
  </target>

  <target name="clean" depends="properties"
    description="clean up" >
    <delete dir="${dist.dir}"/>
    <delete file="${dojo.build.log}"/>
    <delete file="${package.file}"/>
  </target>
</project>